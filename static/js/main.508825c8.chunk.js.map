{"version":3,"sources":["images/bg.png","constants/forms.js","components/AuthForm/AuthForm.style.js","components/AuthForm/AuthForm.js","components/Input/Input.style.js","components/Input/Input.js","components/Password/Password.style.js","components/Password/Password.js","components/Checkbox/Checkbox.style.js","components/Checkbox/Checkbox.js","components/Button/Button.style.js","components/Button/Button.js","components/SocialButtons/SocialButtons.style.js","components/SocialButtons/SocialButtons.js","containers/LoginForm/schema.js","containers/LoginForm/LoginForm.js","containers/SignUpForm/schema.js","containers/SignUpForm/SignUpForm.js","containers/CheckEmailForm/schema.js","containers/CheckEmailForm/CheckEmailForm.js","containers/App/App.style.js","containers/App/App.js","serviceWorker.js","index.js","constants/theme.js"],"names":["module","exports","FORM_TYPES","Wrapper","styled","div","theme","colors","white","border","shadow","text","primary","secondary","info","AuthForm","title","children","className","input","error","Input","field","form","placeholder","errors","name","value","onChange","showError","ghost","Password","useState","showPass","setShowPass","onShowPass","useCallback","inputType","btnTitle","type","onClick","Checkbox","label","StyledButton","button","Button","restProps","facebook","google","SocialButtons","loginSchema","yup","shape","email","strict","trim","required","password","min","max","initValues","remember","LoginForm","onChangeFormType","onSubmit","values","console","log","onClickLink","event","preventDefault","enableReinitialize","initialValues","validationSchema","validateOnChange","validateOnBlur","fieldProps","href","signUpSchema","firstName","lastName","SignUpForm","checkEmailSchema","code","CheckEmailForm","onClickBack","setFieldError","black","style","backgroundImage","bgImage","forms","App","formType","setFormType","data-testid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.508825c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.90fa2009.png\";","export const FORM_TYPES = {\n  login: 'login',\n  signUp: 'signUp',\n  checkEmail: 'checkEmail',\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: relative;\n  padding: 28px 40px 35px 40px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: 0 0 7px ${({ theme }) => theme.border.shadow};\n  width: 500px;\n  max-width: 500px;\n  box-sizing: border-box;\n  color: ${({ theme }) => theme.text.primary};\n  \n  h4 {\n    font-size: 24px;\n    font-weight: 500;\n    padding: 0 0 30px 0;\n    text-align: center;\n  }\n  \n  .ion-android-close {\n    position: absolute;\n    top: 18px;\n    right: 18px;\n    color: ${({ theme }) => theme.text.secondary};\n    z-index: 2;\n  }\n  \n  .form-input {\n    padding-bottom: 17px;\n  }\n  \n  .names {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    \n    .form-input {\n      width: 50%;\n      margin-right: 17px;\n      \n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n  \n  .info {\n    font-family: inherit;\n    font-size: 14px;\n    color: ${({ theme }) => theme.text.secondary};\n    padding: 17px 0 0 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-family: inherit;\n    font-size: 17px;\n    color: ${({ theme }) => theme.text.primary};\n    margin-top: 18px;\n    \n    a {\n      color: ${({ theme }) => theme.colors.info};\n      margin-left: 4px;\n      text-decoration: none;\n    }\n  }\n  \n  .check-info {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-family: inherit;\n    font-size: 17px;\n    color: ${({ theme }) => theme.text.primary};\n    margin-bottom: 17px;\n  }\n  \n  .links {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-family: inherit;\n    font-size: 14px;\n    margin-top: 17px;\n    \n    i {\n      margin-right: 8px;\n    }\n    \n    a {\n      text-decoration: none;\n    }\n    \n    .back {\n      color: ${({ theme }) => theme.text.secondary};\n    }\n    \n    .resend {\n      color: ${({ theme }) => theme.colors.info};\n    }\n  }\n`;\n","import React from 'react';\nimport { Wrapper } from './AuthForm.style';\n\nconst AuthForm = ({ title, children }) => {\n\n  return (\n    <Wrapper>\n      <i className=\"ion-android-close\" />\n      <h4>{title}</h4>\n      <div className=\"content\">\n        {children}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default AuthForm;\nexport { AuthForm };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: relative;\n  \n  .text-input {\n    font-family: inherit;\n    border: 1px solid ${({theme}) => theme.border.input};\n    border-radius: 3px;\n    padding: 14px;\n    font-size: 14px;\n    width: -webkit-fill-available;\n    \n    &.error {\n      border: 1px solid ${({theme}) => theme.colors.error};\n    }\n  }\n  \n  .error-message {\n    font-family: inherit;\n    font-size: 14px;\n    color: ${({theme}) => theme.text.error};\n    padding: 5px 0 0 2px;\n  }\n`;\n","import React from 'react';\nimport { Wrapper } from './Input.style';\n\nconst Input = ({ field, form, placeholder }) => {\n\n  const { errors } = form;\n  const { name, value, onChange } = field;\n\n  const showError = (errors && !!errors[name]);\n  const className = showError ? 'text-input error' : 'text-input';\n\n  return (\n    <Wrapper className=\"form-input\">\n      <input\n        className={className}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      {showError && (\n        <div className=\"error-message\">{errors[name]}</div>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Input;\nexport { Input };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: relative;\n  \n  .text-input {\n    font-family: inherit;\n    border: 1px solid ${({theme}) => theme.border.input};\n    border-radius: 3px;\n    padding: 14px;\n    font-size: 14px;\n    width: -webkit-fill-available;\n    \n    &.error {\n      border: 1px solid ${({theme}) => theme.colors.error};\n    }\n  }\n  \n  .error-message {\n    font-family: inherit;\n    font-size: 14px;\n    color: ${({theme}) => theme.text.error};\n    padding: 5px 0 0 2px;\n  }\n  \n  .show-pass {\n    position: absolute;\n    width: 73px;\n    height: 30px;\n    border: none;\n    border-radius: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${({theme}) => theme.colors.ghost};\n    top: 9px;\n    right: 7px;\n    font-family: inherit;\n    font-size: 14px;\n    cursor: pointer;\n    z-index: 10;\n    pointer-events: all;\n  }\n`;\n","import React, { useState, useCallback } from 'react';\nimport { Wrapper } from './Password.style';\n\nconst Password = ({ field, form, placeholder }) => {\n\n  const [showPass, setShowPass] = useState(false);\n\n  const onShowPass = useCallback(() => {\n    setShowPass(!showPass);\n  }, [showPass, setShowPass])\n\n  const { errors } = form;\n  const { name, value, onChange } = field;\n\n  const showError = (errors && !!errors[name]);\n  const className = showError ? 'text-input error' : 'text-input';\n  const inputType = showPass ? 'text' : 'password';\n  const btnTitle = showPass ? 'Hide' : 'Show';\n\n  return (\n    <Wrapper className=\"form-input\">\n      <input\n        type={inputType}\n        className={className}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      <div className=\"show-pass\" onClick={onShowPass}>{btnTitle}</div>\n      {showError && (\n        <div className=\"error-message\">{errors[name]}</div>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Password;\nexport { Password };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  \n  label {\n    display: flex;\n    align-items: center;\n    \n    .checkbox {\n      border: 1px solid ${({ theme }) => theme.border.input};\n      padding: 4px;\n    }\n    \n    span {\n      margin-left: 8px;\n      font-family: inherit;\n      font-size: 14px;\n    }\n  }\n`;\n","import React from 'react';\nimport { Wrapper } from './Checkbox.style';\n\nconst Checkbox = ({ field, label }) => {\n\n  const { name, value, onChange } = field;\n\n  return (\n    <Wrapper className=\"form-input\">\n      <label>\n        <input\n          type=\"checkbox\"\n          className=\"checkbox\"\n          name={name}\n          value={value}\n          onChange={onChange}\n        />\n        <span>{label}</span>\n      </label>\n    </Wrapper>\n  );\n};\n\nexport default Checkbox;\nexport { Checkbox };\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  font-family: inherit;\n  font-size: 17px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.info};\n  border-radius: 3px;\n  border: none;\n  height: 45px;\n  width: 100%;\n`;\n","import React from 'react';\nimport { StyledButton } from './Button.style';\n\nconst Button = ({ title, onClick, ...restProps }) => {\n\n  return (\n    <StyledButton onClick={onClick} {...restProps}>\n      {title}\n    </StyledButton>\n  );\n};\n\nexport default Button;\nexport { Button };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n  padding: 17px 0;\n  \n  .divider {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n    \n    .line {\n      width: 50%;\n      border-bottom: 1px solid ${({ theme }) => theme.border.input};\n    }\n    \n    .or {\n      padding: 0 20px;\n      color: ${({ theme }) => theme.text.secondary};\n    }\n  }\n  \n  .buttons {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 17px;\n    \n    .facebook,\n    .google {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 180px;\n      height: 45px;\n      border-radius: 3px;\n      border: none;\n      color: ${({ theme }) => theme.colors.white};\n      font-family: inherit;\n      font-size: 16px;\n      font-weight: bold;\n      \n      .icon {\n        margin-right: 18px;\n        font-size: 24px;\n      }\n    }\n    \n    .facebook {\n      background-color: ${({ theme }) => theme.colors.facebook};\n    }\n    \n    .google {\n      background-color: ${({ theme }) => theme.colors.google};\n    }\n  }\n`;\n","import React from 'react';\nimport { Wrapper } from './SocialButtons.style';\n\nconst SocialButtons = () => {\n\n  return (\n    <Wrapper>\n      <div className=\"divider\">\n        <span className=\"line\" />\n        <span className=\"or\">Or</span>\n        <span className=\"line\" />\n      </div>\n      <div className=\"buttons\">\n        <button className=\"facebook\">\n          <i className=\"icon ion-social-facebook\" />\n          <span>Facebook</span>\n        </button>\n        <button className=\"google\">\n          <i className=\"icon ion-social-google\" />\n          <span>Google</span>\n        </button>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default SocialButtons;\nexport { SocialButtons };\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .label('Email address')\n    .strict(false)\n    .trim()\n    .email()\n    .required('Email address required'),\n  password: yup\n    .string()\n    .label('Password')\n    .min(8)\n    .max(120)\n    .required('Password required'),\n});\n","import React, { useCallback } from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport { FORM_TYPES } from '../../constants/forms';\nimport { AuthForm } from '../../components/AuthForm';\nimport { Input } from '../../components/Input';\nimport { Password } from '../../components/Password';\nimport { Checkbox } from '../../components/Checkbox';\nimport { Button } from '../../components/Button';\nimport { SocialButtons } from '../../components/SocialButtons';\n\nimport { loginSchema } from './schema';\n\nconst initValues = {\n  email: '',\n  password: '',\n  remember: false,\n}\n\nconst LoginForm = ({ onChangeFormType }) => {\n\n  const onSubmit = useCallback((values) => {\n    console.log('LoginForm: ', { values });\n  }, []);\n\n  const onClickLink = useCallback((event) => {\n    event.preventDefault();\n    onChangeFormType(FORM_TYPES.signUp);\n  }, [onChangeFormType]);\n\n  return (\n    <AuthForm title=\"Login\">\n      <Formik\n        enableReinitialize\n        initialValues={initValues}\n        onSubmit={onSubmit}\n        validationSchema={loginSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {() => (\n          <Form>\n            <Field name=\"email\">\n              {(fieldProps) => (\n                <Input {...fieldProps} placeholder=\"Email address\" />\n              )}\n            </Field>\n            <Field name=\"password\">\n              {(fieldProps) => (\n                <Password {...fieldProps} placeholder=\"Password\" />\n              )}\n            </Field>\n            <Field name=\"remember\">\n              {(fieldProps) => (\n                <Checkbox {...fieldProps} label=\"Remember me\" />\n              )}\n            </Field>\n            <Button title=\"Login\" type=\"submit\" />\n          </Form>\n        )}\n      </Formik>\n      <div className=\"info\">Forgot Password</div>\n      <SocialButtons />\n      <div className=\"footer\">\n        <span>Don't have an account?</span>\n        <a href=\"#\" onClick={onClickLink}>Sign Up</a>\n      </div>\n    </AuthForm>\n  );\n};\n\nexport default LoginForm;\nexport { LoginForm };\n","import * as yup from 'yup';\n\nexport const signUpSchema = yup.object().shape({\n  email: yup\n    .string()\n    .label('Email address')\n    .strict(false)\n    .trim()\n    .email()\n    .required('Email address required'),\n  password: yup\n    .string()\n    .label('Password')\n    .min(8)\n    .max(120)\n    .required('Password required'),\n  firstName: yup\n    .string()\n    .label('First Name')\n    .strict(false)\n    .trim()\n    .required('First name required'),\n  lastName: yup\n    .string()\n    .label('Last Name')\n    .strict(false)\n    .trim()\n    .required('Last name required'),\n});\n","import React, { useCallback } from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport { FORM_TYPES } from '../../constants/forms';\nimport { AuthForm } from '../../components/AuthForm';\nimport { Input } from '../../components/Input';\nimport { Password } from '../../components/Password';\nimport { Button } from '../../components/Button';\nimport { SocialButtons } from '../../components/SocialButtons';\n\nimport { signUpSchema } from './schema';\n\nconst initValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  remember: false,\n}\n\nconst SignUpForm = ({ onChangeFormType }) => {\n\n  const onSubmit = useCallback((values) => {\n    console.log('SignUpForm: ', { values });\n    onChangeFormType(FORM_TYPES.checkEmail);\n  }, [onChangeFormType]);\n\n  const onClickLink = useCallback((event) => {\n    event.preventDefault();\n    onChangeFormType(FORM_TYPES.login);\n  }, [onChangeFormType]);\n\n  return (\n    <AuthForm title=\"Sign Up\">\n      <Formik\n        enableReinitialize\n        initialValues={initValues}\n        onSubmit={onSubmit}\n        validationSchema={signUpSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {() => (\n          <Form>\n            <div className=\"names\">\n              <Field name=\"firstName\">\n                {(fieldProps) => (\n                  <Input {...fieldProps} placeholder=\"First Name\" />\n                )}\n              </Field>\n              <Field name=\"lastName\">\n                {(fieldProps) => (\n                  <Input {...fieldProps} placeholder=\"Last Name\" />\n                )}\n              </Field>\n            </div>\n            <Field name=\"email\">\n              {(fieldProps) => (\n                <Input {...fieldProps} placeholder=\"Email address\" />\n              )}\n            </Field>\n            <Field name=\"password\">\n              {(fieldProps) => (\n                <Password {...fieldProps} placeholder=\"Password\" />\n              )}\n            </Field>\n            <Button title=\"Sign Up\" type=\"submit\" />\n          </Form>\n        )}\n      </Formik>\n      <SocialButtons />\n      <div className=\"footer\">\n        <span>Already have an account?</span>\n        <a href=\"#\" onClick={onClickLink}>Login</a>\n      </div>\n    </AuthForm>\n  );\n};\n\nexport default SignUpForm;\nexport { SignUpForm };\n","import * as yup from 'yup';\n\nexport const checkEmailSchema = yup.object().shape({\n  code: yup\n    .string()\n    .label('Code')\n    .strict(false)\n    .trim()\n    .required(),\n});\n","import React, { useCallback } from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport { FORM_TYPES } from '../../constants/forms';\nimport { AuthForm } from '../../components/AuthForm';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nimport { checkEmailSchema } from './schema';\n\nconst initValues = {\n  code: '',\n}\n\nconst CheckEmailForm = ({ onChangeFormType }) => {\n\n  const onSubmit = useCallback((values) => {\n    console.log('LoginForm: ', { values });\n  }, []);\n\n  const onClickBack = useCallback((event) => {\n    event.preventDefault();\n    onChangeFormType(FORM_TYPES.signUp);\n  }, [onChangeFormType]);\n\n  return (\n    <AuthForm title=\"Check your email\">\n      <div className=\"check-info\">\n        <span>Enter the verification code we sent to your email</span>\n      </div>\n      <Formik\n        enableReinitialize\n        initialValues={initValues}\n        onSubmit={onSubmit}\n        validationSchema={checkEmailSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {({ setFieldError }) => (\n          <Form>\n            <Field name=\"code\">\n              {(fieldProps) => (\n                <Input {...fieldProps} placeholder=\"Enter code\" />\n              )}\n            </Field>\n            <Button title=\"Verify\" onClick={() => setFieldError('code', 'Invalid Code')} />\n          </Form>\n        )}\n      </Formik>\n      <div className=\"links\">\n        <a href=\"#\" className=\"back\" onClick={onClickBack}>\n          <i className=\"ion-android-arrow-back\" />\n          <span>Back</span>\n        </a>\n        <a href=\"#\" className=\"resend\">\n          <i className=\"ion-android-sync\" />\n          <span>Resend Code</span>\n        </a>\n      </div>\n    </AuthForm>\n  );\n};\n\nexport default CheckEmailForm;\nexport { CheckEmailForm };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  font-family: 'Muli', sans-serif;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  \n  .mask {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    background-color: ${({ theme }) => theme.colors.black };\n    opacity: .6;\n  }\n  \n  .action-buttons {\n    position: absolute;\n    width: 500px;\n    top: calc(100vh * 12 / 100);\n    left: calc(100vw / 2 - 250px);\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    \n    .action {\n      border: 1px solid ${({ theme }) => theme.border.input};\n      border-radius: 3px;\n      color: ${({ theme }) => theme.colors.white};\n      font-family: inherit;\n      font-size: 24px;\n      font-weight: 500;\n      width: 162px;\n      height: 45px;\n      background: transparent;\n      cursor: pointer;\n    }\n  }\n`;\n","import React, { useState, useCallback } from 'react';\n\nimport { FORM_TYPES } from '../../constants/forms';\nimport { LoginForm } from '../LoginForm';\nimport { SignUpForm } from '../SignUpForm';\nimport { CheckEmailForm } from '../CheckEmailForm';\n\nimport { Wrapper } from './App.style';\nimport bgImage from '../../images/bg.png';\n\nconst style = {\n  backgroundImage: `url(${bgImage})`,\n}\n\nconst forms = {\n  [FORM_TYPES.login]: LoginForm,\n  [FORM_TYPES.signUp]: SignUpForm,\n  [FORM_TYPES.checkEmail]: CheckEmailForm,\n}\n\nconst App = () => {\n\n  const [formType, setFormType] = useState(FORM_TYPES.login);\n\n  const onClick = useCallback((type) => () => {\n    setFormType(type);\n  }, [setFormType])\n\n  const AuthForm = forms[formType];\n\n  return (\n    <Wrapper data-testid=\"app-wrapper\" style={style}>\n      <div className=\"mask\" />\n      <div className=\"action-buttons\">\n        <button className=\"action\" onClick={onClick(FORM_TYPES.login)}>Login</button>\n        <button className=\"action\" onClick={onClick(FORM_TYPES.signUp)}>Sign Up</button>\n      </div>\n      <AuthForm onChangeFormType={setFormType} />\n    </Wrapper>\n  );\n}\n\nexport default App;\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { Reset } from 'styled-reset';\n\nimport './index.css';\nimport { App } from './containers/App/App';\nimport { THEME } from './constants/theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Reset />\n    <ThemeProvider theme={THEME}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const THEME = {\n  colors: {\n    black: '#000000',\n    white: '#FFFFFF',\n    info: '#2D6CC0',\n    facebook: '#3B5998',\n    google: '#EA4335',\n    error: '#F02849',\n    ghost: '#E4E6EB',\n  },\n  text: {\n    primary: '#393B41',\n    secondary: '#747984',\n    error: '#F02849',\n  },\n  border: {\n    input: '#DADCE0',\n    shadow: '#5556AB29',\n  },\n};\n"],"sourceRoot":""}